{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPABET","sort","g1","g2","localeCompare","LENGTH","length","reverse","App","useState","NONE","appState","setAppState","className","type","onClick","prevState","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,iEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAERC,EAAY,YAAOH,GAEvB,OAAQC,GACN,KAAKJ,EAASO,QACZD,EAAeA,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MAC9D,MAEF,KAAKV,EAASY,OACZN,EAAeA,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGI,OAASH,EAAGG,UAOhE,OAAIR,EACKC,EAAaQ,UAGfR,G,SAlCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAqCE,IAAMe,EAAgB,WAC3B,MAAgCC,mBAAS,CACvCX,YAAY,EACZD,SAAUJ,EAASiB,OAFrB,mBAAOC,EAAP,KAAiBC,EAAjB,KAuCA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBF,EAASd,WAAaJ,EAASO,SAAW,YACvEe,QAxCe,WACrBH,GAAY,SAAAI,GACV,OAAO,2BACFA,GADL,IAEEnB,SAAUJ,EAASO,cAiCnB,iCAQA,wBACEc,KAAK,SACLD,UAAS,yBAAoBF,EAASd,WAAaJ,EAASY,QAAU,YACtEU,QAvCa,WACnBH,GAAY,SAAAI,GACV,OAAO,2BACFA,GADL,IAEEnB,SAAUJ,EAASY,aAgCnB,4BAQA,wBACES,KAAK,SACLD,UAAS,6BAAwBF,EAASb,YAAc,YACxDiB,QAtCc,WACpBH,GAAY,SAAAI,GACV,OAAO,2BACFA,GADL,IAEElB,YAAakB,EAAUlB,iBA+BvB,sBAQEa,EAASb,YAAca,EAASd,WAAaJ,EAASiB,OACtD,wBACEI,KAAK,SACLD,UAAU,4BACVE,QAtCU,WAClBH,EAAY,CACVd,YAAY,EACZD,SAAUJ,EAASiB,QAgCf,sBAUJ,6BACE,6BACGf,EAAkBD,EAAiBiB,GAAUM,KAAI,SAAAC,GAAI,OACpD,oBAAe,UAAQ,OAAvB,SACGA,GADMA,cCpIrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5a4bbcde.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  let visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods = visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods = visibleGoods.sort((g1, g2) => g1.length - g2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [appState, setAppState] = useState({\n    isReversed: false,\n    sortType: SortType.NONE,\n  });\n\n  const sortByAlphabet = () => {\n    setAppState(prevState => {\n      return {\n        ...prevState,\n        sortType: SortType.ALPABET,\n      };\n    });\n  };\n\n  const sortByLength = () => {\n    setAppState(prevState => {\n      return {\n        ...prevState,\n        sortType: SortType.LENGTH,\n      };\n    });\n  };\n\n  const handleReverse = () => {\n    setAppState(prevState => {\n      return {\n        ...prevState,\n        isReversed: !prevState.isReversed,\n      };\n    });\n  };\n\n  const handleReset = () => {\n    setAppState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${appState.sortType !== SortType.ALPABET && 'is-light'}`}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-info ${appState.sortType !== SortType.LENGTH && 'is-light'}`}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!appState.isReversed && 'is-light'}`}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {(appState.isReversed || appState.sortType !== SortType.NONE) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(goodsFromServer, appState).map(good => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}